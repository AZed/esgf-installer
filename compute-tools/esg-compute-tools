#!/bin/bash

#####
# esg-compute-tools: ESGF Node Application Stack - Compute Tools
# description: Compute tools installer for the ESGF Node application stack
#
#****************************************************************************
#*                                                                          *
#*    Organization: Lawrence Livermore National Lab (LLNL)                  *
#*    Directorate: Computation                                              *
#*    Department: Computing Applications and Research                       *
#*    Division: S&T Global Security                                         *
#*    Matrix: Atmospheric, Earth and Energy Division                        *
#*    Program: PCMDI                                                        *
#*    Project: Earth Systems Grid Fed (ESGF) Node Software Stack            *
#*    First Author: Eugenia Gabrielova (gabrielov1@llnl.gov)                *
#*                                                                          *
#****************************************************************************
#*                                                                          *
#*   Copyright (c) 2009, Lawrence Livermore National Security, LLC.         *
#*   Produced at the Lawrence Livermore National Laboratory                 *
#*   Written by: Gavin M. Bell (gavin@llnl.gov),                            * 
#*               Eugenia Gabrielova (gabrielov1@llnl.gov)                   *
#*   LLNL-CODE-420962                                                       *
#*                                                                          *
#*   All rights reserved. This file is part of the:                         *
#*   Earth System Grid Fed (ESGF) Node Software Stack, Version 1.0          *
#*                                                                          *
#*   For details, see http://esgf.org/                                      *
#*   Please also read this link                                             *
#*    http://esgf.org/LICENSE                                               *
#*                                                                          *
#*   * Redistribution and use in source and binary forms, with or           *
#*   without modification, are permitted provided that the following        *
#*   conditions are met:                                                    *
#*                                                                          *
#*   * Redistributions of source code must retain the above copyright       *
#*   notice, this list of conditions and the disclaimer below.              *
#*                                                                          *
#*   * Redistributions in binary form must reproduce the above copyright    *
#*   notice, this list of conditions and the disclaimer (as noted below)    *
#*   in the documentation and/or other materials provided with the          *
#*   distribution.                                                          *
#*                                                                          *
#*   Neither the name of the LLNS/LLNL nor the names of its contributors    *
#*   may be used to endorse or promote products derived from this           *
#*   software without specific prior written permission.                    *
#*                                                                          *
#*   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS    *
#*   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT      *
#*   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS      *
#*   FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL LAWRENCE    *
#*   LIVERMORE NATIONAL SECURITY, LLC, THE U.S. DEPARTMENT OF ENERGY OR     *
#*   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,           *
#*   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT       *
#*   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF       *
#*   USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND    *
#*   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,     *
#*   OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT     *
#*   OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF     *
#*   SUCH DAMAGE.                                                           *
#*                                                                          *
#****************************************************************************
#####

#####
# Description: Installer for ESG Compute Tools
# Authors: gabrielov1@llnl.gov
####

#####
# uses: git, tar
#####

#--------------
# User Defined / Settable (public)
#--------------
install_prefix=${install_prefix:-"/usr/local"}
DEBUG=${DEBUG:-0}
git_placeholder="$install_prefix/git"
git_exec_path_param="--exec-path=$git_placeholder/libexec/git-core"
java_placeholder="$install_prefix/java"
java_install_path_config_param="--with-java-home=$java_placeholder/bin/java"
compress_extensions=".tar.gz|.tar.bz2|.tgz|.bz2|.tar"
envfile="/etc/esg.env"
esg_functions_file=./esgf-functions
esg_compute_languages_file=./esg-compute-languages

#--------------------------------
# External programs' versions
#--------------------------------
mesos_version=${mesos_version:="0.9.0"}
mesos_min_version=${mesos_min_version:="0.9.0"}
spark_version=${spark_version:="0.5.0"}
spark_min_version=${spark_min_version:="0.5.0"}
# yarn_version
# hadoop_version

#--------------------------------
# External programs' script variables
#--------------------------------
mesos_install_dir=${MESOS_HOME:-${install_prefix}/mesos}
mesos_git_url="git://git.apache.org/mesos.git"
spark_install_dir=${SPARK_HOME:-${install_prefix}/spark}
spark_git_url="git://github.com/mesos/spark.git"

[ -e "${envfile}" ] && source ${envfile} && ((VERBOSE)) && printf "sourcing environment from: ${envfile} \n"
[ -e ${esg_functions_file} ] && source ${esg_functions_file} && ((VERBOSE)) && printf "sourcing from: ${esg_functions_file} \n"

# This is sourcing for now to help Scala/Clojure dependent frameworks install. Once the environment stuff in those is correctly 
# implemented, it will not be necessary to source this file.
[ -e ${esg_compute_languages_file} ] && source ${esg_compute_languages_file} && ((VERBOSE)) && printf "sourcing from: ${esg_compute_languages_file} \n"

#####
# Mesos (Cluster manager for resource sharing across distirbuted applications)
#####

# Fixme find uninstall template
uninstall_mesos () {
	# Delete Mesos install directory
	if [ -d "$mesos_install_dir" ]; then
		sudo rm -r "$mesos_install_dir"
	fi

	# Remove mesos from environment variable file
	local key=${1}
	sed -i '/'${key}'/d' ${envfile}
}

# FIXME Look up esg-node test formatting
test_mesos_build () {
	cd "$mesos_install_dir"
	#make check
	echo
	echo "---------------"
	echo "Skipping Mesos Test Temporarily"
	echo "---------------"
	echo
}

# Mesos is an Apache project, and can be obtained from its git and svn repositories. 
# For the purpose of this installation, we use the git repository as the source, and 
# configure the mesos install with local versions of java and git.
get_mesos () {
	if [! -d $mesos_install_dir ]
	then
		git "$git_exec_path_param" clone "$mesos_git_url" "$mesos_install_dir"
	else
		cd "$mesos_install_dir"
		make clean
	fi

	cd "$mesos_install_dir"
	./bootstrap
	./configure "$java_install_path_config_param" --with-webui --with-included-zookeeper
	make
	test_mesos_build
}

compute_setup_mesos() {
	echo -n "[Placeholder] Checking for mesos >= ${mesos_min_version}"
 	#check_version mesos ${mesos_min_version}
 	#[ $? == 0 ] && (( ! force_install )) && echo " [OK]" && return 0
 
	echo
	echo "*******************************"
 	echo "Setting up Mesos ${mesos_version}"
 	echo "*******************************"
	echo

	# Get Mesos from Online Source
	get_mesos
}

#####
# Spark (FIXME ESG-relevant Spark description here)
#####

uninstall_spark () {
	# Remove Spark install directory
	if [ -e ${spark_install_dir} ]; then
		sudo rm -r ${spark_install_dir}
	fi

	# Remove Spark home from environment file
	local key=${1}
	sed -i '/'${key}'/d' ${envfile}
}

# Task for Eugenia: Need to implement a Testing Method for Spark here, using one of the
# included examples?

get_spark () {
	if [ ! -e ${spark_install_dir} ]
	then
		git ${git_exec_path_param} clone ${spark_git_url} ${spark_install_dir}
	else
		cd ${spark_install_dir}
		sbt/sbt clean
		git pull
	fi

	cd ${spark_install_dir}
	#TODO remove hardcoding here
	${spark_install_dir}/sbt/sbt -DSCALA_HOME=/usr/local/scala compile
	# Check for compile errors here
}

compute_setup_spark() {
	echo -n "Checking for spark >= ${spark_min_version}"
	#check_version spark ${spark_min_version}
	#[ $? == 0 ] && (( ! force_install )) && echo " [OK]" && return 0

	echo
	echo "*****************************"
	echo "Setting Up Spark ${spark_version}"
	echo "*****************************"
	echo

	# Set up Spark
	get_spark
}

#####
# Hadoop (FIXME ESG-relevant Hadoop description here)
#####
compute_setup_hadoop() {
	echo
}

#####
# Core Methods
#####

# Uninstall Mesos, Spark, Scala, Hadoop
uninstall_compute_tools() {
	# Uninstall Spark Framework
	uninstall_spark SPARK_HOME

	# Uninstall Mesos cluster manager
	uninstall_mesos MESOS_HOME

	# Placeholder uninstall Hadoop
}

setup_compute_tools() {
	echo
	echo "-----------------------------------"
	echo "ESGF Node Compute Tools"
	echo "-----------------------------------"
	echo

	# Installing Spark
	compute_setup_spark

	# Installing Hadoop
	#compute_setup_hadoop

	# Installing Mesos
	# compute_setup_mesos
}

if [[ "$BASH_SOURCE" == "$0" ]]
then
	echo
	echo "----- Setting Up Compute Tools -----"
	setup_compute_tools
fi
